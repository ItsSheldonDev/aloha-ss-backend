{
  "openapi": "3.0.0",
  "paths": {
    "/api/formations": {
      "get": {
        "operationId": "FormationsController_findAll",
        "parameters": [
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Type de formation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "required": false,
            "in": "query",
            "description": "Période (all, 2024, 2025, recent)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des formations récupérée avec succès"
          }
        },
        "summary": "Récupérer toutes les formations (accès public)",
        "tags": [
          "formations"
        ]
      }
    },
    "/api/formations/upload": {
      "post": {
        "operationId": "FormationsController_uploadExcelFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fichier Excel téléchargé avec succès"
          },
          "400": {
            "description": "Données invalides ou fichier manquant"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Télécharger un nouveau fichier Excel des formations (admin)",
        "tags": [
          "formations"
        ]
      }
    },
    "/api/news": {
      "get": {
        "operationId": "NewsController_findAllPublic",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Numéro de page pour la pagination",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Nombre d'éléments par page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des actualités publiées avec pagination"
          }
        },
        "summary": "Récupérer toutes les actualités publiées (accès public)",
        "tags": [
          "news"
        ]
      }
    },
    "/api/news/admin": {
      "get": {
        "operationId": "NewsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Liste de toutes les actualités"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer toutes les actualités (admin)",
        "tags": [
          "news"
        ]
      },
      "post": {
        "operationId": "NewsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Actualité créée avec succès"
          },
          "400": {
            "description": "Données invalides"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Créer une nouvelle actualité (admin)",
        "tags": [
          "news"
        ]
      }
    },
    "/api/news/admin/{id}": {
      "get": {
        "operationId": "NewsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'actualité",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Détails de l'actualité"
          },
          "401": {
            "description": "Non autorisé"
          },
          "404": {
            "description": "Actualité non trouvée"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer une actualité par son ID (admin)",
        "tags": [
          "news"
        ]
      },
      "put": {
        "operationId": "NewsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'actualité à mettre à jour",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNewsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Actualité mise à jour avec succès"
          },
          "400": {
            "description": "Données invalides"
          },
          "401": {
            "description": "Non autorisé"
          },
          "404": {
            "description": "Actualité non trouvée"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Mettre à jour une actualité (admin)",
        "tags": [
          "news"
        ]
      },
      "delete": {
        "operationId": "NewsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'actualité à supprimer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actualité supprimée avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "404": {
            "description": "Actualité non trouvée"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Supprimer une actualité (admin)",
        "tags": [
          "news"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentification réussie"
          },
          "401": {
            "description": "Authentification échouée"
          }
        },
        "summary": "Authentification d'un administrateur",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Profil récupéré avec succès"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer le profil de l'utilisateur connecté",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/inscriptions/sauvetage-sportif": {
      "post": {
        "operationId": "InscriptionsController_sendSauvetageSportifInscription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Inscription envoyée avec succès"
          },
          "400": {
            "description": "Données invalides"
          }
        },
        "summary": "Envoyer une inscription pour Sauvetage Sportif (accès public)",
        "tags": [
          "inscriptions"
        ]
      }
    },
    "/api/inscriptions/contact": {
      "post": {
        "operationId": "InscriptionsController_sendContactForm",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Message envoyé avec succès"
          },
          "400": {
            "description": "Données invalides"
          }
        },
        "summary": "Envoyer un message via le formulaire de contact (accès public)",
        "tags": [
          "inscriptions"
        ]
      }
    },
    "/api/inscriptions/signalement": {
      "post": {
        "operationId": "InscriptionsController_sendSignalement",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Signalement envoyé avec succès"
          },
          "400": {
            "description": "Données invalides"
          }
        },
        "summary": "Envoyer un signalement (accès public)",
        "tags": [
          "inscriptions"
        ]
      }
    },
    "/api/documents": {
      "get": {
        "operationId": "DocumentsController_findAll",
        "parameters": [
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "Filtrer par catégorie",
            "schema": {
              "enum": [
                "FORMATIONS_PRO",
                "MIEUX_NOUS_CONNAITRE",
                "CGV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des documents récupérée avec succès"
          }
        },
        "summary": "Récupérer tous les documents (accès public)",
        "tags": [
          "documents"
        ]
      }
    },
    "/api/documents/{id}/download": {
      "get": {
        "operationId": "DocumentsController_download",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID du document",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document téléchargé avec succès"
          },
          "404": {
            "description": "Document non trouvé"
          }
        },
        "summary": "Télécharger un document (accès public)",
        "tags": [
          "documents"
        ]
      }
    },
    "/api/documents/admin": {
      "post": {
        "operationId": "DocumentsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "FORMATIONS_PRO",
                      "MIEUX_NOUS_CONNAITRE",
                      "CGV"
                    ]
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document créé avec succès"
          },
          "400": {
            "description": "Données invalides ou fichier manquant"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Créer un nouveau document (admin)",
        "tags": [
          "documents"
        ]
      },
      "get": {
        "operationId": "DocumentsController_findAllAdmin",
        "parameters": [
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "Filtrer par catégorie",
            "schema": {
              "enum": [
                "FORMATIONS_PRO",
                "MIEUX_NOUS_CONNAITRE",
                "CGV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des documents récupérée avec succès"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer tous les documents (admin)",
        "tags": [
          "documents"
        ]
      }
    },
    "/api/documents/admin/{id}": {
      "get": {
        "operationId": "DocumentsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID du document",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document récupéré avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "404": {
            "description": "Document non trouvé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer un document par son ID (admin)",
        "tags": [
          "documents"
        ]
      },
      "put": {
        "operationId": "DocumentsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID du document",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document mis à jour avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "404": {
            "description": "Document non trouvé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Mettre à jour un document (admin)",
        "tags": [
          "documents"
        ]
      },
      "delete": {
        "operationId": "DocumentsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID du document",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document supprimé avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "404": {
            "description": "Document non trouvé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Supprimer un document (admin)",
        "tags": [
          "documents"
        ]
      }
    },
    "/api/gallery": {
      "get": {
        "operationId": "GalleryController_findAll",
        "parameters": [
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "Filtrer par catégorie",
            "schema": {
              "enum": [
                "formations",
                "activites",
                "evenements"
              ],
              "type": "string"
            }
          },
          {
            "name": "mode",
            "required": false,
            "in": "query",
            "description": "Mode de récupération (all = par catégorie, random = images aléatoires)",
            "schema": {
              "enum": [
                "all",
                "random"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des images récupérée avec succès"
          }
        },
        "summary": "Récupérer toutes les images (accès public)",
        "tags": [
          "gallery"
        ]
      }
    },
    "/api/gallery/admin": {
      "post": {
        "operationId": "GalleryController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "alt": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "formations",
                      "activites",
                      "evenements"
                    ]
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Image créée avec succès"
          },
          "400": {
            "description": "Données invalides ou fichier manquant"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Télécharger une nouvelle image (admin)",
        "tags": [
          "gallery"
        ]
      },
      "get": {
        "operationId": "GalleryController_findAllAdmin",
        "parameters": [
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "Filtrer par catégorie",
            "schema": {
              "enum": [
                "formations",
                "activites",
                "evenements"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des images récupérée avec succès"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer toutes les images (admin)",
        "tags": [
          "gallery"
        ]
      }
    },
    "/api/gallery/admin/{id}": {
      "get": {
        "operationId": "GalleryController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'image",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Image récupérée avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "404": {
            "description": "Image non trouvée"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer une image par son ID (admin)",
        "tags": [
          "gallery"
        ]
      },
      "put": {
        "operationId": "GalleryController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'image",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateImageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image mise à jour avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "404": {
            "description": "Image non trouvée"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Mettre à jour une image (admin)",
        "tags": [
          "gallery"
        ]
      },
      "delete": {
        "operationId": "GalleryController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'image",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Image supprimée avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "404": {
            "description": "Image non trouvée"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Supprimer une image (admin)",
        "tags": [
          "gallery"
        ]
      }
    },
    "/api/admin/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Administrateur créé avec succès"
          },
          "400": {
            "description": "Données invalides"
          },
          "401": {
            "description": "Non autorisé"
          },
          "403": {
            "description": "Accès interdit"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Créer un nouvel administrateur (super admin uniquement)",
        "tags": [
          "users"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Liste des administrateurs récupérée avec succès"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer la liste des administrateurs",
        "tags": [
          "users"
        ]
      }
    },
    "/api/admin/users/me": {
      "get": {
        "operationId": "UsersController_getMe",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Profil récupéré avec succès"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer son propre profil",
        "tags": [
          "users"
        ]
      }
    },
    "/api/admin/users/profile/password": {
      "put": {
        "operationId": "UsersController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mot de passe changé avec succès"
          },
          "400": {
            "description": "Mot de passe actuel incorrect"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Changer son propre mot de passe",
        "tags": [
          "users"
        ]
      }
    },
    "/api/admin/users/profile/avatar": {
      "put": {
        "operationId": "UsersController_updateAvatar",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar mis à jour avec succès"
          },
          "400": {
            "description": "Fichier manquant ou invalide"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Mettre à jour son propre avatar",
        "tags": [
          "users"
        ]
      }
    },
    "/api/admin/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'administrateur",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Administrateur récupéré avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "404": {
            "description": "Administrateur non trouvé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer un administrateur par son ID",
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'administrateur",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Administrateur mis à jour avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "403": {
            "description": "Accès interdit"
          },
          "404": {
            "description": "Administrateur non trouvé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Mettre à jour un administrateur (super admin uniquement)",
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'administrateur",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Administrateur supprimé avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "403": {
            "description": "Accès interdit"
          },
          "404": {
            "description": "Administrateur non trouvé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Supprimer un administrateur (super admin uniquement)",
        "tags": [
          "users"
        ]
      }
    },
    "/api/settings": {
      "get": {
        "operationId": "SettingsController_getPublicSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Paramètres récupérés avec succès"
          }
        },
        "summary": "Récupérer les paramètres publics du système",
        "tags": [
          "settings"
        ]
      }
    },
    "/api/settings/admin": {
      "get": {
        "operationId": "SettingsController_getSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Paramètres récupérés avec succès"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer les paramètres du système (admin)",
        "tags": [
          "settings"
        ]
      },
      "post": {
        "operationId": "SettingsController_updateSettings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Paramètres mis à jour avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "403": {
            "description": "Accès interdit"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Mettre à jour les paramètres du système (super admin uniquement)",
        "tags": [
          "settings"
        ]
      }
    },
    "/api/admin/database/stats": {
      "get": {
        "operationId": "DatabaseController_getDatabaseStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Statistiques récupérées avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "403": {
            "description": "Accès interdit"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer les statistiques de la base de données (super admin uniquement)",
        "tags": [
          "database"
        ]
      }
    },
    "/api/admin/database/export": {
      "post": {
        "operationId": "DatabaseController_exportDatabase",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Base de données exportée avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "403": {
            "description": "Accès interdit"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Exporter la base de données (super admin uniquement)",
        "tags": [
          "database"
        ]
      }
    },
    "/api/admin/database/import": {
      "post": {
        "operationId": "DatabaseController_importDatabase",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Base de données importée avec succès"
          },
          "400": {
            "description": "Fichier invalide"
          },
          "401": {
            "description": "Non autorisé"
          },
          "403": {
            "description": "Accès interdit"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Importer la base de données (super admin uniquement)",
        "tags": [
          "database"
        ]
      }
    },
    "/api/admin/database/reset": {
      "post": {
        "operationId": "DatabaseController_resetDatabase",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Base de données réinitialisée avec succès"
          },
          "401": {
            "description": "Non autorisé"
          },
          "403": {
            "description": "Accès interdit"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Réinitialiser la base de données (super admin uniquement)",
        "tags": [
          "database"
        ]
      }
    },
    "/api/admin/dashboard/stats": {
      "get": {
        "operationId": "DashboardController_getStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Statistiques récupérées avec succès"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer les statistiques pour le tableau de bord",
        "tags": [
          "dashboard"
        ]
      }
    },
    "/api/admin/dashboard/yearly-stats": {
      "get": {
        "operationId": "DashboardController_getYearlyStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Statistiques annuelles récupérées avec succès"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer les statistiques annuelles",
        "tags": [
          "dashboard"
        ]
      }
    },
    "/api/admin/dashboard/formation-trends": {
      "get": {
        "operationId": "DashboardController_getFormationTrends",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Tendances récupérées avec succès"
          },
          "401": {
            "description": "Non autorisé"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Récupérer les tendances des formations",
        "tags": [
          "dashboard"
        ]
      }
    },
    "/api/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "L'API fonctionne correctement"
          }
        },
        "summary": "Vérifier l'état de santé de l'API",
        "tags": [
          "health"
        ]
      }
    }
  },
  "info": {
    "title": "API Aloha Secourisme",
    "description": "\n      API REST complète pour la gestion de l'application Aloha Secourisme.\n      \n      Cette API permet de gérer les formations, les inscriptions, les documents, \n      la galerie d'images et l'administration du système.\n      \n      ## Authentification\n      \n      La plupart des endpoints nécessitent une authentification par token JWT.\n      Pour vous authentifier, utilisez l'endpoint `/api/auth/login` pour obtenir un token,\n      puis incluez ce token dans l'en-tête d'autorisation de vos requêtes.\n      \n      ## Rôles\n      \n      - **Accès public** : Accessible sans authentification\n      - **Admin** : Nécessite d'être connecté avec un compte administrateur\n      - **Super Admin** : Nécessite d'être connecté avec un compte super administrateur\n      \n      ## Modules principaux\n      \n      - **Formations** : Gestion des sessions de formation via Excel\n      - **Documents** : Gestion des documents téléchargeables\n      - **Galerie** : Gestion des images de la galerie\n      - **News** : Gestion des actualités\n      - **Admin/Users** : Gestion des utilisateurs administrateurs\n      - **Dashboard** : Statistiques et tableaux de bord\n      - **Settings** : Paramètres du système\n      - **Database** : Export/import de la base de données\n    ",
    "version": "1.0.0",
    "contact": {
      "name": "Aloha Secourisme",
      "url": "https://www.aloha-secourisme.fr",
      "email": "contact@aloha-secourisme.fr"
    },
    "license": {
      "name": "Propriétaire",
      "url": "https://www.aloha-secourisme.fr"
    }
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Serveur local"
    },
    {
      "url": "https://api.aloha-secourisme.fr",
      "description": "Serveur de production"
    }
  ],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "description": "Entrez votre token JWT ici"
      }
    },
    "schemas": {
      "CreateNewsDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Nouvelle formation PSC1",
            "description": "Titre de l'actualité"
          },
          "content": {
            "type": "string",
            "example": "Contenu détaillé de l'actualité...",
            "description": "Contenu de l'actualité"
          },
          "author": {
            "type": "string",
            "example": "John Doe",
            "description": "Auteur de l'actualité"
          },
          "published": {
            "type": "boolean",
            "example": true,
            "description": "Statut de publication",
            "default": true
          }
        },
        "required": [
          "title",
          "content",
          "published"
        ]
      },
      "UpdateNewsDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Nouvelle formation PSC1",
            "description": "Titre de l'actualité"
          },
          "content": {
            "type": "string",
            "example": "Contenu détaillé de l'actualité...",
            "description": "Contenu de l'actualité"
          },
          "author": {
            "type": "string",
            "example": "John Doe",
            "description": "Auteur de l'actualité"
          },
          "published": {
            "type": "boolean",
            "example": true,
            "description": "Statut de publication",
            "default": true
          }
        }
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "admin@example.com",
            "description": "Adresse email de l'utilisateur"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "Mot de passe de l'utilisateur"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UpdateDocumentDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Fiche formation PSC1",
            "description": "Titre du document"
          },
          "category": {
            "type": "string",
            "enum": [
              "FORMATIONS_PRO",
              "MIEUX_NOUS_CONNAITRE",
              "CGV"
            ],
            "description": "Catégorie du document",
            "example": "FORMATIONS_PRO"
          }
        }
      },
      "UpdateImageDto": {
        "type": "object",
        "properties": {
          "alt": {
            "type": "string",
            "example": "Formation PSC1 - juin 2023",
            "description": "Description de l'image"
          },
          "category": {
            "type": "string",
            "enum": [
              "formations",
              "activites",
              "evenements"
            ],
            "description": "Catégorie de l'image",
            "example": "formations"
          }
        }
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "admin@example.com",
            "description": "Email de l'administrateur"
          },
          "password": {
            "type": "string",
            "example": "Password123!",
            "description": "Mot de passe (min 8 caractères)"
          },
          "nom": {
            "type": "string",
            "example": "Dupont",
            "description": "Nom de famille"
          },
          "prenom": {
            "type": "string",
            "example": "Jean",
            "description": "Prénom"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "SUPER_ADMIN"
            ],
            "description": "Rôle de l'administrateur",
            "example": "ADMIN"
          }
        },
        "required": [
          "email",
          "password",
          "nom",
          "prenom",
          "role"
        ]
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "example": "CurrentPassword123!",
            "description": "Mot de passe actuel"
          },
          "newPassword": {
            "type": "string",
            "example": "NewPassword123!",
            "description": "Nouveau mot de passe (min 8 caractères)"
          }
        },
        "required": [
          "currentPassword",
          "newPassword"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "admin@example.com",
            "description": "Email de l'administrateur"
          },
          "nom": {
            "type": "string",
            "example": "Dupont",
            "description": "Nom de famille"
          },
          "prenom": {
            "type": "string",
            "example": "Jean",
            "description": "Prénom"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "SUPER_ADMIN"
            ],
            "description": "Rôle de l'administrateur",
            "example": "ADMIN"
          },
          "password": {
            "type": "string",
            "example": "NewPassword123!",
            "description": "Nouveau mot de passe (min 8 caractères)"
          }
        }
      },
      "ContactSettingsDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "contact@aloha-secourisme.fr"
          },
          "phone": {
            "type": "string",
            "example": "06 12 34 56 78"
          },
          "address": {
            "type": "string",
            "example": "123 rue de la Paix, 75000 Paris"
          }
        }
      },
      "SocialSettingsDto": {
        "type": "object",
        "properties": {
          "facebook": {
            "type": "string",
            "example": "https://facebook.com/aloha-secourisme"
          },
          "instagram": {
            "type": "string",
            "example": "https://instagram.com/aloha-secourisme"
          }
        }
      },
      "NotificationSettingsDto": {
        "type": "object",
        "properties": {
          "emailInscription": {
            "type": "boolean",
            "example": true
          },
          "emailContact": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "UpdateSettingsDto": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/ContactSettingsDto"
          },
          "social": {
            "$ref": "#/components/schemas/SocialSettingsDto"
          },
          "notifications": {
            "$ref": "#/components/schemas/NotificationSettingsDto"
          }
        }
      }
    }
  }
}